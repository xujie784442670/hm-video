<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jasonone.mapper.AccountMapper">

    <resultMap id="BaseResultMap" type="cn.jasonone.bean.Account">
            <id property="id" column="ID" jdbcType="BIGINT"/>
            <result property="username" column="USERNAME" jdbcType="VARCHAR"/>
            <result property="nickName" column="NICK_NAME" jdbcType="VARCHAR"/>
            <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
            <result property="password" column="PASSWORD" jdbcType="CHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="createdTime" column="CREATED_TIME" jdbcType="TIMESTAMP"/>
            <result property="updatedTime" column="UPDATED_TIME" jdbcType="TIMESTAMP"/>
            <result property="status" column="STATUS" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="DetailMap" type="cn.jasonone.bean.Account">
        <id property="id" column="ID" jdbcType="BIGINT"/>
        <result property="username" column="USERNAME" jdbcType="VARCHAR"/>
        <result property="nickName" column="NICK_NAME" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="password" column="PASSWORD" jdbcType="CHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="createdTime" column="CREATED_TIME" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="UPDATED_TIME" jdbcType="TIMESTAMP"/>
        <result property="status" column="STATUS" jdbcType="INTEGER"/>
        <collection property="fans"
                    ofType="integer"
                    column="ID"
                    select="level3.project.mapper.FocusMapper.getFansCount"/>
        <collection property="focus"
                    ofType="integer"
                    column="ID"
                    select="level3.project.mapper.FocusMapper.getFocusCount"/>
    </resultMap>
    <sql id="Base_Column_List">
        ID,USERNAME,nick_name,avatar,
        PASSWORD,email,CREATED_TIME,
        UPDATED_TIME,STATUS
    </sql>

    <select id="findNickNameById" resultType="string">
        select nick_name from account
            where ID=#{id}
    </select>
    <select id="findAvatarById" resultType="string">
        select avatar from account
            where ID=#{id}
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from account
        where  ID = #{id,jdbcType=BIGINT} 
    </select>
    <select id="findAll" resultType="cn.jasonone.bean.Account">
        select
        <include refid="Base_Column_List" />
        from account
        <where>
            <if test="id != null">
                and id like concat('%', #{id}, '%')
            </if>
            <if test="username != null and username != ''">
                and username like concat('%',#{username},'%')
            </if>
            <if test="email != null ">
                and email like concat('%', #{email}, '%')
            </if>
            <if test="createdTime != null">
                <if test="createdTime[0] !=null ">
                    and created_time &gt;= #{createdTime[0],javaType=java.util.Date}
                </if>
                <if test="createdTime[1] !=null ">
                    and created_time &lt;= #{createdTime[1],javaType=java.util.Date}
                </if>
            </if>
            <if test="status != null">
                and status = #{status,jdbcType=INTEGER}
            </if>
            <if test="logicDelete != null">
                and logic_delete = #{logicDelete,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <select id="existUsernameOrEmail" resultType="java.lang.Integer">
       select count(*) from account where USERNAME=#{username,jdbcType=VARCHAR} or email=#{email,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" resultType="cn.jasonone.bean.Account">
        select * from account
    </select>
    <select id="findOne" resultType="cn.jasonone.bean.Account">
        select
        <include refid="Base_Column_List" />
        from account
        <where>

            <if test="username != null and username != '' and password!=null and password != ''" >
                and username = #{username,jdbcType=VARCHAR}
                and password = MD5(#{password,jdbcType=CHAR})
            </if>
            <if test="email != null and email != ''">
                and email = #{email,jdbcType=VARCHAR}
            </if>

        </where>
    </select>
    <select id="findById" resultType="cn.jasonone.bean.Account">
        select * from account where id=#{id}
    </select>
    <select id="selectAllByUsername" resultType="cn.jasonone.bean.Account">
        select * from account where USERNAME=#{username}
    </select>
    <select id="findDetail" resultMap="DetailMap">
        select * from account where ID=#{id}
    </select>
    <select id="selectByAccountId" resultType="java.lang.String">
        select nick_name from account where ID=#{id}
    </select>
    <select id="selectByNickName" resultType="java.lang.Long" parameterType="java.lang.String">
        select ID from account where nick_name=#{name}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from account
        where  ID = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="cn.jasonone.bean.Account" useGeneratedKeys="true">
        insert into account
        ( ID,USERNAME,avatar,nick_name
        ,PASSWORD,email,CREATED_TIME
        ,UPDATED_TIME,STATUS)
        values (#{id,jdbcType=BIGINT},#{username,jdbcType=VARCHAR},#{nickName},#{avatar,jdbcType=VARCHAR}
        ,MD5(#{password,jdbcType=CHAR}),#{email,jdbcType=VARCHAR},#{createdTime,jdbcType=TIMESTAMP}
        ,#{updatedTime,jdbcType=TIMESTAMP},#{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="cn.jasonone.bean.Account" useGeneratedKeys="true">
        insert into account
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">ID,</if>
                <if test="username != null">USERNAME,</if>
                <if test="avatar != null">avatar,</if>
                <if test="nickName != null">nick_name,</if>
                <if test="password != null">PASSWORD,</if>
                <if test="email != null">email,</if>
                <if test="createdTime != null">CREATED_TIME,</if>
                <if test="updatedTime != null">UPDATED_TIME,</if>
                <if test="status != null">STATUS,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="username != null">#{username,jdbcType=VARCHAR},</if>
                <if test="nickName != null">#{nickName,jdbcType=VARCHAR},</if>
                <if test="avatar != null">#{avatar,jdbcType=VARCHAR},</if>
                <if test="password != null">MD5(#{password,jdbcType=CHAR}),</if>
                <if test="email != null">#{email,jdbcType=VARCHAR},</if>
                <if test="createdTime != null">#{createdTime,jdbcType=TIMESTAMP},</if>
                <if test="updatedTime != null">#{updatedTime,jdbcType=TIMESTAMP},</if>
                <if test="status != null">#{status,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.jasonone.bean.Account">
        update account
        <set>
                <if test="username != null">
                    USERNAME = #{username,jdbcType=VARCHAR},
                </if>
                <if test="avatar != null">
                    avatar = #{avatar,jdbcType=VARCHAR},
                </if>
                <if test="password != null">
                    PASSWORD = MD5(#{password,jdbcType=CHAR}),
                </if>
                <if test="email != null">
                    email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="createdTime != null">
                    CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updatedTime != null">
                    UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
                </if>
                <if test="status != null">
                    STATUS = #{status,jdbcType=INTEGER},
                </if>
        </set>
        where   ID = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.jasonone.bean.Account">
        update account
        set USERNAME     = #{username,jdbcType=VARCHAR},
            avatar       = #{avatar,jdbcType=VARCHAR},
            PASSWORD     = MD5(#{password,jdbcType=CHAR}),
            email        = #{email,jdbcType=VARCHAR},
            CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
            UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
            STATUS       = #{status,jdbcType=INTEGER}
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="logicDeleteById">
        update account
        set logic_delete=1
        where ID = #{id}
    </update>
    <update id="updatePassword">
        update account
        set password=MD5(#{password})
        where ID = #{id}
    </update>
    <update id="updateNickname" parameterType="cn.jasonone.bean.Account">
        update  account
        <if test="nickName != null">
            set nick_name=#{nickName}
        </if>
        where ID = #{id}
    </update>
    <update id="updateEmail">
        <if test="email != null">
            update account
          set email=#{email}
            where ID = #{id}

        </if>

    </update>

</mapper>
